[{"C:\\Users\\compl\\Desktop\\e_commerce\\src\\App.js":"1","C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Products\\Products.jsx":"2","C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Products\\Product\\Product.jsx":"3","C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Products\\Product\\styles.js":"4","C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Navbar\\styles.js":"5","C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\index.js":"6","C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Navbar\\Navbar.jsx":"7","C:\\Users\\compl\\Desktop\\e_commerce\\src\\index.js":"8","C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Products\\styles.js":"9","C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Cart\\Cart.jsx":"10","C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Cart\\styles.js":"11","C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx":"12","C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Cart\\CartItem\\styles.js":"13","C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js":"14","C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","C:\\Users\\compl\\Desktop\\e_commerce\\src\\lib\\commerce.js":"16","C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"17","C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"18","C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\CheckoutForm\\FormInput.jsx":"19"},{"size":2189,"mtime":1610406060349,"results":"20","hashOfConfig":"21"},{"size":748,"mtime":1609633265439,"results":"22","hashOfConfig":"21"},{"size":1349,"mtime":1609632916605,"results":"23","hashOfConfig":"21"},{"size":412,"mtime":1609537614585,"results":"24","hashOfConfig":"21"},{"size":1853,"mtime":1609707223188,"results":"25","hashOfConfig":"21"},{"size":229,"mtime":1609751094045,"results":"26","hashOfConfig":"21"},{"size":1473,"mtime":1609707182348,"results":"27","hashOfConfig":"21"},{"size":147,"mtime":1609534681553,"results":"28","hashOfConfig":"21"},{"size":322,"mtime":1609537627908,"results":"29","hashOfConfig":"21"},{"size":2173,"mtime":1624838327765,"results":"30","hashOfConfig":"21"},{"size":671,"mtime":1609634563921,"results":"31","hashOfConfig":"21"},{"size":1321,"mtime":1609707046810,"results":"32","hashOfConfig":"21"},{"size":387,"mtime":1609647505428,"results":"33","hashOfConfig":"21"},{"size":1350,"mtime":1609750958533,"results":"34","hashOfConfig":"21"},{"size":2005,"mtime":1610576443370,"results":"35","hashOfConfig":"21"},{"size":119,"mtime":1609566993751,"results":"36","hashOfConfig":"21"},{"size":4564,"mtime":1611619275111,"results":"37","hashOfConfig":"21"},{"size":168,"mtime":1610150361399,"results":"38","hashOfConfig":"21"},{"size":593,"mtime":1610392494737,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pwbx4u",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\compl\\Desktop\\e_commerce\\src\\App.js",[],"C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Products\\Products.jsx",[],["86","87"],"C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Products\\Product\\styles.js",[],"C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Navbar\\styles.js",[],["88","89"],"C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\index.js",[],"C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Navbar\\Navbar.jsx",["90","91"],"C:\\Users\\compl\\Desktop\\e_commerce\\src\\index.js",[],["92","93"],"C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Products\\styles.js",[],"C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Cart\\styles.js",[],["94","95"],"C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx",["96"],"import React from 'react'\r\nimport { Typography, Button, Card, CardActions, CardContent, CardMedia } from '@material-ui/core'\r\n\r\nimport useStyles from './styles'\r\n\r\nconst CartItem = ({ item, updateCartQty, removeFromCart }) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div>\r\n            <CardMedia image={ item.media.source } alt={ item.name } className={ classes.media } />\r\n            <CardContent className={ classes.cardContent }>\r\n                <Typography variant=\"h4\">{ item.name }</Typography>\r\n                <Typography variant=\"h5\">{ item.line_total.formatted_with_symbol }</Typography>\r\n            </CardContent>\r\n            <CardActions className={ classes.cardActions }>\r\n                <div className={ classes.buttons }>\r\n                    <Button type=\"button\" size=\"small\" onClick={ () => updateCartQty(item.id, item.quantity - 1) }>-</Button>\r\n                    <Typography>{ item.quantity }</Typography>\r\n                    <Button type=\"button\" size=\"small\" onClick={ () => updateCartQty(item.id, item.quantity + 1) }>+</Button>\r\n                </div>\r\n                <Button variant=\"contained\" type=\"button\" color=\"secondary\" onClick={ () => removeFromCart(item.id) }>Remove</Button>\r\n            </CardActions>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem\r\n",["97","98"],"C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["99","100","101","102"],"C:\\Users\\compl\\Desktop\\e_commerce\\src\\lib\\commerce.js",[],["103","104"],"C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["105","106","107","108","109","110","111"],"import React, { useState, useEffect } from 'react'\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core'\r\nimport { useForm, FormProvider } from 'react-hook-form'\r\n\r\nimport { commerce } from '../../lib/commerce'\r\n\r\nimport FormInput from './FormInput'\r\n\r\nconst AddressForm = ({ checkoutToken }) => {\r\n    const [shippingCountries, setShippingCountries] = useState([])\r\n    const [shippingCountry, setShippingCountry] = useState('')\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([])\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('')\r\n    const [shippingOptions, setShippingOptions] = useState([])\r\n    const [shippingOption, setShippingOption] = useState('')\r\n    const methods = useForm()\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })) \r\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })) \r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId)\r\n\r\n        setShippingCountries(countries)\r\n        setShippingCountry(Object.keys(countries)[0])\r\n    }\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivions(countryCode)\r\n\r\n        setShippingSubdivisions(subdivisions)\r\n        setShippingSubdivision(Object.keys(subdivisions)[0])\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(shippingCountry) fetchSubdivisions(shippingCountry)\r\n    }, [shippingCountry])\r\n\r\n    return (\r\n        <>\r\n            <Typography variant='h6' gutterBottom>Shipping Address</Typography>\r\n            <FormProvider { ...methods }>\r\n                <form onSubmit={null}>\r\n                    <Grid container spacing={ 3 }>\r\n                        <FormInput required name='firstName' label='First Name'/>\r\n                        <FormInput required name='lastName' label='Last Name'/>\r\n                        <FormInput required name='email' label='Email Address'/>\r\n                        <FormInput required name='address' label='Address'/>\r\n                        <FormInput required name='city' label='City'/>\r\n                        <FormInput required name='zip' label='ZIP / Postal Code'/>\r\n                        <FormInput required name='gamerTag' label='Riot ID, Steam ID, Gamer Tag'/>\r\n                        <FormInput name='discord' label='Discord Handle'/>\r\n                        <Grid item xs={ 12 } sm={ 6 }>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={ shippingCountry } fullWidth \r\n                            onChange={ (e) => setShippingCountry(e.target.value) }>\r\n                                { countries.map((country) => (\r\n                                    <MenuItem key={ country.id } value={ country.id }>\r\n                                        { country.label }\r\n                                    </MenuItem>\r\n                                )) }\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={ 12 } sm={ 6 }>\r\n                            <InputLabel>Shipping Subdivision</InputLabel>\r\n                            <Select value={ shippingSubdivision } fullWidth \r\n                            onChange={ (e) => setShippingSubdivision(e.target.value) }>\r\n                                { countries.map((subdivision) => (\r\n                                    <MenuItem key={ subdivision.id } value={ subdivision.id }>\r\n                                        { subdivision.label }\r\n                                    </MenuItem>\r\n                                )) }\r\n                            </Select>\r\n                        </Grid>\r\n                        {/* <Grid item xs={ 12 } sm={ 6 }>\r\n                            <InputLabel>Shipping Options</InputLabel> \r\n                            <Select value={null} fullWidth onChange={null}>\r\n                                <MenuItem key={null} value={null}>\r\n                                    Select Me\r\n                                </MenuItem>\r\n                            </Select>\r\n                        </Grid> */}\r\n                    </Grid>\r\n                </form>\r\n\r\n            </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddressForm\r\n","C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\compl\\Desktop\\e_commerce\\src\\components\\CheckoutForm\\FormInput.jsx",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"112","replacedBy":"116"},{"ruleId":"114","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":2,"column":46,"nodeType":"120","messageId":"121","endLine":2,"endColumn":54},{"ruleId":"118","severity":1,"message":"122","line":2,"column":56,"nodeType":"120","messageId":"121","endLine":2,"endColumn":60},{"ruleId":"112","replacedBy":"123"},{"ruleId":"114","replacedBy":"124"},{"ruleId":"112","replacedBy":"125"},{"ruleId":"114","replacedBy":"126"},{"ruleId":"118","severity":1,"message":"127","line":2,"column":30,"nodeType":"120","messageId":"121","endLine":2,"endColumn":34},{"ruleId":"112","replacedBy":"128"},{"ruleId":"114","replacedBy":"129"},{"ruleId":"118","severity":1,"message":"130","line":2,"column":55,"nodeType":"120","messageId":"121","endLine":2,"endColumn":71},{"ruleId":"118","severity":1,"message":"131","line":2,"column":73,"nodeType":"120","messageId":"121","endLine":2,"endColumn":80},{"ruleId":"118","severity":1,"message":"132","line":2,"column":82,"nodeType":"120","messageId":"121","endLine":2,"endColumn":88},{"ruleId":"118","severity":1,"message":"133","line":12,"column":24,"nodeType":"120","messageId":"121","endLine":12,"endColumn":37},{"ruleId":"112","replacedBy":"134"},{"ruleId":"114","replacedBy":"135"},{"ruleId":"118","severity":1,"message":"132","line":2,"column":40,"nodeType":"120","messageId":"121","endLine":2,"endColumn":46},{"ruleId":"118","severity":1,"message":"136","line":14,"column":12,"nodeType":"120","messageId":"121","endLine":14,"endColumn":27},{"ruleId":"118","severity":1,"message":"137","line":14,"column":29,"nodeType":"120","messageId":"121","endLine":14,"endColumn":47},{"ruleId":"118","severity":1,"message":"138","line":15,"column":12,"nodeType":"120","messageId":"121","endLine":15,"endColumn":26},{"ruleId":"118","severity":1,"message":"139","line":15,"column":28,"nodeType":"120","messageId":"121","endLine":15,"endColumn":45},{"ruleId":"118","severity":1,"message":"140","line":19,"column":11,"nodeType":"120","messageId":"121","endLine":19,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":37,"column":8,"nodeType":"143","endLine":37,"endColumn":10,"suggestions":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],["145"],["146"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.",["145"],["146"],["145"],["146"],"'Card' is defined but never used.",["145"],["146"],"'CircularProgress' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","'setActiveStep' is assigned a value but never used.",["145"],["146"],"'shippingOptions' is assigned a value but never used.","'setShippingOptions' is assigned a value but never used.","'shippingOption' is assigned a value but never used.","'setShippingOption' is assigned a value but never used.","'subdivisions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["147"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"150","text":"151"},[1620,1622],"[checkoutToken.id]"]